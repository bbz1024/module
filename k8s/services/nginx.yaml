apiVersion: apps/v1 # deployment api 版本
kind: Deployment # 资源类型
metadata: # 元信息
  name: nginx-svc
  namespace: tiktok
  labels:
    app: nginx-svc
    type: gateway
spec:
  replicas: 2 # 期望副本数
  revisionHistoryLimit: 10 # 保留历史版本
  selector: # 匹配标签，用于找到匹配的replacementSet，也会创建一个 RS 资源类型的
    matchLabels: # 匹配标签
      app: nginx-svc
  template:   # pod模板 也会创建一个 Pod 资源类型
    metadata:
      name: nginx-svc
      labels:
        app: nginx-svc
    spec:
      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc # service 名称
  labels:
    app: nginx #Services 自身的标签，其他pod可以根据这个找到services
spec:
  selector: # 匹配哪些 pod 会被该 services 代理
    app: nginx-svc
  ports: # 端口映射
    - port: 80 # services 自己的端口，在使用内网ip访问时使用
      targetPort: 80  # 目标pod 的端口
      name: web # 为端口起个名字，可以通过名称快速访问到
      protocol: TCP
  type: NodePort # 随机端口分配，对外暴露服务（30000-32767） 这个端口绑定在当前主机上面的，且集群中的每个node都会绑定这个端口
  # 也可以将服务暴露在集群外部，但是这种方法不推荐，效率低，而且Services是四层负载。如果暴露对外推荐使用Ingress
